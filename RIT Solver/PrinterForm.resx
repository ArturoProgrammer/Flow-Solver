<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>