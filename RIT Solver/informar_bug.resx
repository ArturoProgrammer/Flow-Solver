<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="label2.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label3.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>